apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
    spec:
      initContainers:
        - name: get-release-{{ .Chart.Name }}
          image: busybox
          command: ['sh', '-c', 'wget -qO- {{ .Values.release }} | tar -xvz --strip-components=1 -C /work-dir']
          volumeMounts:
          - name: workdir
            mountPath: "/work-dir"
        - name: composer-{{ .Chart.Name }}
          image: composer
          command: ['sh', '-c', 'cd /work-dir && composer update --no-dev --ignore-platform-reqs --no-scripts']
          volumeMounts:
          - name: workdir
            mountPath: "/work-dir"
      containers:
        - name: server-{{ .Chart.Name }}
          image: "{{ .Values.serverImage.repository }}:{{ .Values.serverImage.tag }}"
          imagePullPolicy: {{ .Values.serverImage.pullPolicy }}
          ports:
            - containerPort: {{ .Values.serverService.internalPort }}
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.serverService.internalPort }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.serverService.internalPort }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.conf
            - name: workdir
              mountPath: "/application"
        - name: php-{{ .Chart.Name }}
          image: "{{ .Values.phpImage.repository }}:{{ .Values.phpImage.tag }}"
          imagePullPolicy: {{ .Values.phpImage.pullPolicy }}
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "cd /application && php artisan package:discover"]
          ports:
            - containerPort: {{ .Values.phpService.internalPort }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.phpService.internalPort }}
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            tcpSocket:
              port: {{ .Values.phpService.internalPort }}
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
{{ toYaml .Values.resources | indent 12 }}
          volumeMounts:
            - name: workdir
              mountPath: "/application"
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
      volumes:
        - name: nginx-config
          configMap:
            name: {{ .Release.Name }}-configmap
        - name: workdir
          emptyDir: {}
